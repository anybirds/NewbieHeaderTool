<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{486A0DFD-A4DF-34AC-8BC9-EB672E138A6F}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>Practice</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
    <VcpkgEnabled>false</VcpkgEnabled>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="do_not_import_user.props" Condition="exists('do_not_import_user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\project\cppast_practice\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Practice.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Practice</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\project\cppast_practice\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Practice.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Practice</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\project\cppast_practice\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Practice.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Practice</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\project\cppast_practice\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Practice.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Practice</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4800</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;CPPAST_VERSION_MINOR="0";CPPAST_VERSION_MAJOR="0";CPPAST_VERSION_STRING="0.0";TYPE_SAFE_ENABLE_ASSERTIONS=0;TYPE_SAFE_ENABLE_PRECONDITION_CHECKS=1;TYPE_SAFE_ENABLE_WRAPPER=1;TYPE_SAFE_ARITHMETIC_POLICY=1;CPPAST_CLANG_BINARY="C:/llvm-project/build/Release/bin/clang++.exe";CPPAST_CLANG_VERSION_STRING="13.0.0";CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;CPPAST_VERSION_MINOR=\"0\";CPPAST_VERSION_MAJOR=\"0\";CPPAST_VERSION_STRING=\"0.0\";TYPE_SAFE_ENABLE_ASSERTIONS=0;TYPE_SAFE_ENABLE_PRECONDITION_CHECKS=1;TYPE_SAFE_ENABLE_WRAPPER=1;TYPE_SAFE_ARITHMETIC_POLICY=1;CPPAST_CLANG_BINARY=\"C:/llvm-project/build/Release/bin/clang++.exe\";CPPAST_CLANG_VERSION_STRING=\"13.0.0\";CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
"C:\Program Files\PowerShell\7\pwsh.exe" -noprofile -executionpolicy Bypass -file C:/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary C:/project/cppast_practice/build/Debug/Practice.exe -installedDir C:/vcpkg/installed/x64-windows/debug/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>cppast\src\Debug\cppast.lib;cppast\external\tpl\Debug\tiny-process-library.lib;C:\llvm-project\build\Release\lib\libclang.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/project/cppast_practice/build/Debug/Practice.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/project/cppast_practice/build/Debug/Practice.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DisableSpecificWarnings>4800</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CPPAST_VERSION_MINOR="0";CPPAST_VERSION_MAJOR="0";CPPAST_VERSION_STRING="0.0";TYPE_SAFE_ENABLE_ASSERTIONS=0;TYPE_SAFE_ENABLE_PRECONDITION_CHECKS=1;TYPE_SAFE_ENABLE_WRAPPER=1;TYPE_SAFE_ARITHMETIC_POLICY=1;CPPAST_CLANG_BINARY="C:/llvm-project/build/Release/bin/clang++.exe";CPPAST_CLANG_VERSION_STRING="13.0.0";CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CPPAST_VERSION_MINOR=\"0\";CPPAST_VERSION_MAJOR=\"0\";CPPAST_VERSION_STRING=\"0.0\";TYPE_SAFE_ENABLE_ASSERTIONS=0;TYPE_SAFE_ENABLE_PRECONDITION_CHECKS=1;TYPE_SAFE_ENABLE_WRAPPER=1;TYPE_SAFE_ARITHMETIC_POLICY=1;CPPAST_CLANG_BINARY=\"C:/llvm-project/build/Release/bin/clang++.exe\";CPPAST_CLANG_VERSION_STRING=\"13.0.0\";CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
"C:\Program Files\PowerShell\7\pwsh.exe" -noprofile -executionpolicy Bypass -file C:/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary C:/project/cppast_practice/build/Release/Practice.exe -installedDir C:/vcpkg/installed/x64-windows/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>cppast\src\Release\cppast.lib;cppast\external\tpl\Release\tiny-process-library.lib;C:\llvm-project\build\Release\lib\libclang.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/project/cppast_practice/build/Release/Practice.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/project/cppast_practice/build/Release/Practice.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DisableSpecificWarnings>4800</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CPPAST_VERSION_MINOR="0";CPPAST_VERSION_MAJOR="0";CPPAST_VERSION_STRING="0.0";TYPE_SAFE_ENABLE_ASSERTIONS=0;TYPE_SAFE_ENABLE_PRECONDITION_CHECKS=1;TYPE_SAFE_ENABLE_WRAPPER=1;TYPE_SAFE_ARITHMETIC_POLICY=1;CPPAST_CLANG_BINARY="C:/llvm-project/build/Release/bin/clang++.exe";CPPAST_CLANG_VERSION_STRING="13.0.0";CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CPPAST_VERSION_MINOR=\"0\";CPPAST_VERSION_MAJOR=\"0\";CPPAST_VERSION_STRING=\"0.0\";TYPE_SAFE_ENABLE_ASSERTIONS=0;TYPE_SAFE_ENABLE_PRECONDITION_CHECKS=1;TYPE_SAFE_ENABLE_WRAPPER=1;TYPE_SAFE_ARITHMETIC_POLICY=1;CPPAST_CLANG_BINARY=\"C:/llvm-project/build/Release/bin/clang++.exe\";CPPAST_CLANG_VERSION_STRING=\"13.0.0\";CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
"C:\Program Files\PowerShell\7\pwsh.exe" -noprofile -executionpolicy Bypass -file C:/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary C:/project/cppast_practice/build/MinSizeRel/Practice.exe -installedDir C:/vcpkg/installed/x64-windows/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>cppast\src\MinSizeRel\cppast.lib;cppast\external\tpl\MinSizeRel\tiny-process-library.lib;C:\llvm-project\build\Release\lib\libclang.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/project/cppast_practice/build/MinSizeRel/Practice.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/project/cppast_practice/build/MinSizeRel/Practice.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4800</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CPPAST_VERSION_MINOR="0";CPPAST_VERSION_MAJOR="0";CPPAST_VERSION_STRING="0.0";TYPE_SAFE_ENABLE_ASSERTIONS=0;TYPE_SAFE_ENABLE_PRECONDITION_CHECKS=1;TYPE_SAFE_ENABLE_WRAPPER=1;TYPE_SAFE_ARITHMETIC_POLICY=1;CPPAST_CLANG_BINARY="C:/llvm-project/build/Release/bin/clang++.exe";CPPAST_CLANG_VERSION_STRING="13.0.0";CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CPPAST_VERSION_MINOR=\"0\";CPPAST_VERSION_MAJOR=\"0\";CPPAST_VERSION_STRING=\"0.0\";TYPE_SAFE_ENABLE_ASSERTIONS=0;TYPE_SAFE_ENABLE_PRECONDITION_CHECKS=1;TYPE_SAFE_ENABLE_WRAPPER=1;TYPE_SAFE_ARITHMETIC_POLICY=1;CPPAST_CLANG_BINARY=\"C:/llvm-project/build/Release/bin/clang++.exe\";CPPAST_CLANG_VERSION_STRING=\"13.0.0\";CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\project\cppast_practice;C:\project\cppast_practice\cppast\src\..\include;C:\project\cppast_practice\build\_deps\type_safe-src\include;C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert;C:\project\cppast_practice\cppast\external\tpl;C:\llvm-project\clang\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message></Message>
      <Command>setlocal
"C:\Program Files\PowerShell\7\pwsh.exe" -noprofile -executionpolicy Bypass -file C:/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary C:/project/cppast_practice/build/RelWithDebInfo/Practice.exe -installedDir C:/vcpkg/installed/x64-windows/bin -OutVariable out
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>cppast\src\RelWithDebInfo\cppast.lib;cppast\external\tpl\RelWithDebInfo\tiny-process-library.lib;C:\llvm-project\build\Release\lib\libclang.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/project/cppast_practice/build/RelWithDebInfo/Practice.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/project/cppast_practice/build/RelWithDebInfo/Practice.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\project\cppast_practice\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/project/cppast_practice/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/project/cppast_practice -BC:/project/cppast_practice/build --check-stamp-file C:/project/cppast_practice/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\WindowsPaths.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeCCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeCXXCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeRCCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeSystem.cmake;C:\vcpkg\scripts\buildsystems\vcpkg.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\project\cppast_practice\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/project/cppast_practice/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/project/cppast_practice -BC:/project/cppast_practice/build --check-stamp-file C:/project/cppast_practice/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\WindowsPaths.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeCCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeCXXCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeRCCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeSystem.cmake;C:\vcpkg\scripts\buildsystems\vcpkg.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\project\cppast_practice\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/project/cppast_practice/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/project/cppast_practice -BC:/project/cppast_practice/build --check-stamp-file C:/project/cppast_practice/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\WindowsPaths.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeCCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeCXXCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeRCCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeSystem.cmake;C:\vcpkg\scripts\buildsystems\vcpkg.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\project\cppast_practice\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/project/cppast_practice/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/project/cppast_practice -BC:/project/cppast_practice/build --check-stamp-file C:/project/cppast_practice/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.19\Modules\Platform\WindowsPaths.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeCCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeCXXCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeRCCompiler.cmake;C:\project\cppast_practice\build\CMakeFiles\3.19.6\CMakeSystem.cmake;C:\vcpkg\scripts\buildsystems\vcpkg.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\project\cppast_practice\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="C:\project\cppast_practice\serialize.cpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\aligned_union.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\all_of.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\assert.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\assign_or_construct.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\constant_parser.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\copy_move_control.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\force_inline.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\is_nothrow_swappable.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\map_invoke.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\detail\variant_impl.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\config.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\arithmetic_policy.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\boolean.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\bounded_type.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\compact_optional.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\constrained_type.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\deferred_construction.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\downcast.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\flag.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\flag_set.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\floating_point.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\index.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\integer.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\narrow_cast.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\optional.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\optional_ref.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\output_parameter.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\reference.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\strong_typedef.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\tagged_union.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\types.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\variant.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\include\type_safe\visitor.hpp" />
    <ClInclude Include="C:\project\cppast_practice\build\_deps\type_safe-src\external\debug_assert\debug_assert.hpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\project\cppast_practice\build\ZERO_CHECK.vcxproj">
      <Project>{17F68AB3-BEAA-36F0-9E75-F4E28F33D0C7}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\project\cppast_practice\build\cppast\src\cppast.vcxproj">
      <Project>{BC1FD89E-26AC-34C3-BD6A-DFD24AAC08AB}</Project>
      <Name>cppast</Name>
    </ProjectReference>
    <ProjectReference Include="C:\project\cppast_practice\build\cppast\external\tpl\tiny-process-library.vcxproj">
      <Project>{53941AF3-0949-3C3A-A989-CE16DEDCD116}</Project>
      <Name>tiny-process-library</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>